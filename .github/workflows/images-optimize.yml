# ----------------------------------------------------
# WORKFLOW NAME
# ----------------------------------------------------
# Optimizes images (PNG/JPG/SVG) automatically on push.
name: Optimize Images

# ----------------------------------------------------
# WHEN SHOULD THIS WORKFLOW RUN?
# ----------------------------------------------------
on:
  push:
    branches: [ main ]              # run on main pushes
    paths:                          # only when images change
      - "assets/images/**"
  workflow_dispatch:                # allow manual run

# ----------------------------------------------------
# PERMISSIONS (needs write to commit optimized files)
# ----------------------------------------------------
permissions:
  contents: write                   # commit back optimized images

# ----------------------------------------------------
# JOBS TO RUN
# ----------------------------------------------------
jobs:
  optimize:
    runs-on: ubuntu-latest

    steps:
      # 1) Get repository files
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Setup Node (to run imagemin CLI)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) Install imagemin CLI + plugins
      #    - imagemin-cli: command line tool
      #    - mozjpeg: jpeg compression
      #    - pngquant: png compression
      #    - svgo: svg optimization
      - name: Install imagemin tools
        run: |
          npm i -g imagemin-cli imagemin-mozjpeg imagemin-pngquant imagemin-svgo

      # 4) Optimize JPG/JPEG
      #    --plugin=mozjpeg uses sane defaults (lossy but visually safe)
      - name: Optimize JPEGs
        run: |
          npx imagemin "assets/images/**/*.{jpg,jpeg,JPG,JPEG}" \
            --plugin=mozjpeg \
            --out-dir=assets/images

      # 5) Optimize PNG
      #    --plugin=pngquant does high-quality lossy compression
      - name: Optimize PNGs
        run: |
          npx imagemin "assets/images/**/*.{png,PNG}" \
            --plugin=pngquant \
            --out-dir=assets/images

      # 6) Optimize SVG (lossless)
      - name: Optimize SVGs
        run: |
          npx imagemin "assets/images/**/*.{svg,SVG}" \
            --plugin=svgo \
            --out-dir=assets/images

      # 7) Auto-commit changes (only if files got smaller)
      - name: Commit optimized images
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(images): optimize assets"
          file_pattern: assets/images/**
