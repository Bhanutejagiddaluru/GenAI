# ----------------------------------------------------
# WORKFLOW NAME
# ----------------------------------------------------
# This is the label that appears in GitHub's "Actions" tab.
# It's just a name so you know what this workflow does.
name: Deploy to GitHub Pages

# ----------------------------------------------------
# WHEN SHOULD THIS WORKFLOW RUN?
# ----------------------------------------------------
on:
  push: # Trigger when code is pushed to the repository
    branches: [ main ] # Only if push happens to the 'main' branch
    paths: # Only trigger if these specific files change
      - "index.html"             # Run if the homepage HTML changes
      - "assets/css/style.css"   # Run if main CSS changes
      - "assets/js/script.js"    # Run if main JavaScript changes

      # To run this workflow on ANY file change:
      # Remove the above 3 lines and use:
      # paths:
      #   - "**"   # "**" means "match all files everywhere"

  workflow_dispatch: # This allows manually starting the workflow in GitHub UI

# ----------------------------------------------------
# WHAT PERMISSIONS DOES THE WORKFLOW HAVE?
# ----------------------------------------------------
permissions:
  contents: read   # Can read repository files
  pages: write     # Can publish to GitHub Pages
  id-token: write  # Can create secure authentication token for deployment

# ----------------------------------------------------
# HOW MANY COPIES OF WORKFLOW CAN RUN AT ONCE?
# ----------------------------------------------------
concurrency:
  group: "pages"            # Group name for workflow runs
  cancel-in-progress: true  # Cancel old run if a new one starts

# ----------------------------------------------------
# JOBS TO RUN (Steps in CI/CD pipeline)
# ----------------------------------------------------
jobs:

  # ----------------------------------------------------
  # 1) LINT JOB – Check HTML, CSS, JS before deploying
  # ----------------------------------------------------
  lint:
    name: Lint HTML/CSS/JS   # Friendly job name
    runs-on: ubuntu-latest   # Run on latest Ubuntu Linux server
    steps:
      - uses: actions/checkout@v4 # Step 1: Download repo content
      - uses: actions/setup-node@v4 # Step 2: Install Node.js (needed for lint tools)
        with:
          node-version: 20   # Use Node.js version 20
          cache: npm         # Cache npm dependencies for speed (needs package-lock.json)
      - run: npm install --no-fund --no-audit # Step 3: Install dependencies (skip ads & audits)
      - run: npm run lint    # Step 4: Run the linting command from package.json

  # ----------------------------------------------------
  # 2) BUILD JOB – Prepare site for deployment
  # ----------------------------------------------------
  build:
    name: Build artifact
    runs-on: ubuntu-latest
    needs: lint              # Only run if lint passes
    steps:
      - uses: actions/checkout@v4     # Download repo content
      - uses: actions/configure-pages@v5 # Prepare GitHub Pages config
      - uses: actions/upload-pages-artifact@v3 # Package site files for deployment
        with:
          path: . # Upload everything from repo root (index.html, assets/, etc.)

  # ----------------------------------------------------
  # 3) DEPLOY JOB – Publish site to GitHub Pages
  # ----------------------------------------------------
  deploy:
    name: Deploy to Pages
    runs-on: ubuntu-latest
    needs: build            # Only run if build passes
    environment:
      name: github-pages    # Target GitHub Pages environment
      url: ${{ steps.deployment.outputs.page_url }} # Store final live URL
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4 # Deploy packaged site to Pages
